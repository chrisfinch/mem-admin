AWSTemplateFormatVersion: 2010-09-09
Description: eventbriteImages
Parameters:
  VpcId:
    Type: String
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Default: vpc-e6e00183
  Subnets:
    Type: CommaDelimitedList
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    Default: 'subnet-cb91ae8d, subnet-a7b74ac2, subnet-179e8063'
  Stack:
    Description: 'Applied directly as a tag (''membership'', or ''memb-masterclasses'')'
    Type: String
    Default: membership
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: String
    Default: aws-membership
  Stage:
    Description: Applied directly as a tag
    Type: String
    Default: PROD
  SiteDomain:
    Description: >-
      Site domain Name (e.g. 'masterclasses-alpha.theguardian.com' or
      'membership.theguardian.com')
    Type: String
  SslArn:
    Description: SSL certificate ARN
    Type: String
    Default: ''
  AllowedIngressIps:
    Description: >-
      IP address range (CIDR) that access the site (e.g. '77.91.248.0/21'-
      Internal Guardian, or '0.0.0.0/0' - the whole internet!)
    Type: String
    Default: 77.91.248.0/21
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  VulnerabilityScanningSecurityGroup:
    Description: Security group that grants access to the account's Vulnerability Scanner
    Type: 'AWS::EC2::SecurityGroup::Id'
  AMIID:
    Type: String
    Description: Amazon Machine Image ID
    Default: ami-6857e51b
Resources:
  EventbriteImagesAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !GetAZs ''
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref EventbriteImagesLaunchConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      LoadBalancerNames:
        - !Ref EventbriteImagesElasticLoadBalancer
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Stack
          Value: !Ref Stack
          PropagateAtLaunch: 'true'
        - Key: App
          Value: memb-eventbriteImages
          PropagateAtLaunch: 'true'
        - Key: Stage
          Value: !Ref Stage
          PropagateAtLaunch: 'true'
  EventbriteImagesLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !Ref AMIID
      SecurityGroups:
        - !Ref InstanceSecurityGroup
        - !Ref VulnerabilityScanningSecurityGroup
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref MembershipAppInstanceProfile
      AssociatePublicIpAddress: true
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -ev
            /opt/features/ssh-keys/initialise-keys-and-cron-job.sh -l -b github-team-keys -t Membership-and-Subscriptions || true
            adduser --system --home /membership --disabled-password membership
            aws --region ${AWS::Region} s3 cp s3://membership-dist/${Stack}/${Stage}/memb-eventbriteImages/memb-eventbriteImages.tgz /tmp
            mkdir /memb-eventbriteImages
            tar -xzf /tmp/memb-eventbriteImages.tgz -C /memb-eventbriteImages
            aws --region ${AWS::Region} s3 cp s3://membership-private/${Stage}/eventbriteImages-config.json /memb-eventbriteImages
            /opt/features/nodejs/install.sh
            sudo npm install pm2 -g
            /memb-eventbriteImages/server.sh
  MembershipAppRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: PrivateBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:GetObject'
                Resource: 'arn:aws:s3:::membership-private/*'
  MembershipAppInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref MembershipAppRole
  EventbriteImagesElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      Listeners:
        - LoadBalancerPort: '443'
          InstancePort: '3000'
          Protocol: HTTPS
          SSLCertificateId: !Ref SslArn
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets: !Ref Subnets
      HealthCheck:
        Target: 'HTTP:3000/healthcheck'
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '10'
        Timeout: '5'
      ConnectionDrainingPolicy:
        Enabled: 'true'
        Timeout: '60'
  LoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Permit incoming HTTP access on port 443, egress to port 3000'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref AllowedIngressIps
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '3000'
          ToPort: '3000'
          CidrIp: 0.0.0.0/0
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open up SSH access and enable HTTP access on the configured port
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref AllowedIngressIps
        - IpProtocol: tcp
          FromPort: '3000'
          ToPort: '3000'
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
  EventbriteImagesELBDNSrecord:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: /hostedzone/Z1E4V12LQGXFEC
      Comment: CNAME for AWS ELB
      Name: !Join
        - .
        - - !Ref SiteDomain
          - origin.membership.guardianapis.com.
      Type: CNAME
      TTL: '120'
      ResourceRecords:
        - !GetAtt
          - EventbriteImagesElasticLoadBalancer
          - DNSName
Outputs:
  URL:
    Description: URL of the EventbriteImages website
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - EventbriteImagesElasticLoadBalancer
          - DNSName
